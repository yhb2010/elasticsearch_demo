为了加快写索引的速度，Lucene采用了延迟写入的策略。虽然这种策略提高了写入的效率，但是最大的弊端是，如果数据在内存中还没有持久化到磁盘上，发生了断电，
就可能导致数据丢失。为了避免数据丢失，ES添加了事务日志(Translog)，事务日志记录了所有还没有被持久化到磁盘的数据。

ES写索引的具体过程：
	1、当有数据写入时，为了加快写索引的速度，并没有把数据直接写入磁盘，而是先写入内存，但是为了防止数据丢失，会追加一份数据到事务日志中。因为内存中的
	数据还会继续写入，所以内存中的数据并不是以段的形式存储的，是检索不到的。总之，ES是一个准实时搜索引擎。

	2、当到达默认的时间(1s)或者内存的数据达到一定量时，会触发一次刷新，刷新的主要步骤如下：
	将内存中的数据刷新到一个新的段中，但是该段并没有持久化到硬盘，而是缓存到操作系统的文件缓存系统中，内存里的数据和操作系统的文件缓存系统里的数据的
	区别：
		内存使用的是jvm内存，文件缓存系统使用的是操作系统的内存
		内存的数据不是以段的形式存储的，并且可以继续向内存里写数据。文件缓存系统中的数据是以段的形式存储的，所以只能读，不能写
		内存中的数据是搜索不到的，文件缓存系统中的数据是可以搜索的
	打开保存在文件缓存系统中的段，使其可以被搜索。
	清空内存，准备接收新的数据。日志不做清空处理。

	3、数据继续写入，同时写入内存和日志。

	4、最后，刷新。当日志数据的大小超过512m或者时间超过30分钟时，需要触发一次刷新。步骤如下：
	在文件缓存系统中创建一个新的段，并将内存中的数据写入，使其可被搜索。
	清空内存，准备接收新的数据
	将文件系统缓存中的数据通过fsync函数刷新到硬盘中
	生成提交点
	删除旧的日志，创建一个空的日志

在需要重启时，ES不仅要根据提交点去加载已经持久化过的段，还需要根据translog里的记录，把未持久化的数据重新持久化到磁盘上。