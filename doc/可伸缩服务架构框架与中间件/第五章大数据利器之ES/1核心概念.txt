1、cluster：集群，由一个或多个ES节点组成
2、node：节点，组成ES集群的服务单元，同一个集群内节点的名字不能重复，通常在一个节点上分配一个或者多个分片
3、shards：分片，当索引上的数据量太大的时候，我们通常会将一个索引上的数据进行水平拆分，拆分出来的每个数据块叫做一个分片。在一个多分片的索引中写入数据时，
通过路由来确定具体写入哪一个分片中，所以在创建索引时需要指定分片的数量，并且分片的数量一旦确定就不能更改。分片后的索引带来了规模上（数据水平切分）和性能
上（并行执行）的提升。每个分片都是Lucene中的一个索引文件，每个分片必须有一个主分片和零到多个副本分片。
4、replicas：备份也叫作副本，是指对主分片的备份。主分片和备份分片都可以对外提供查询服务，写操作时先在主分片上完成，然后分发到备份上。当主分片不可用时，
会在备份的分片中选举出一个作为主分片，所以备份不仅可以提升系统的高可用性能，还可以提升搜索时的并发性能，但是若副本太多的话，在写操作时会增加数据同步的负
担。
5、index：索引，由一个和多个分片组成，通过索引的名字在集群内进行唯一标识。
6、type：类别，指索引内部的逻辑分区，通过type的名字在索引内进行唯一标识，在查询时如果没有该值，则表示在整个索引中查询。
7、document：文档，索引中的每一条数据叫做一个文档，类似于关系型数据库中的一条数据，通过_id在type内进行唯一标识。
8、settings：对集群中索引的定义，比如一个索引默认的分片数、副本数等信息。
9、mappings：类似于关系型数据库中的表结构信息，用于定义索引中字段field的存储类型、分词方式、是否存储等信息。ES中的mapping是可以动态识别的。如果没有特
殊需求，则不需要手动创建mapping，因为ES会自动根据数据格式识别它的类型，但是当需要对某些字段添加特殊属性（比如：定义使用其他分词器、是否分词、是否存储）时
，就需要手动设置mapping了。一个索引的mapping一旦创建，若已经存储了数据，就不可修改了。
10、analyzer：字段的分词方式的定义。一个analyzer通常由一个tokenizer、零到多个Filter组成。比如默认的标准analyzer包含一个标准的tokenizer和三个
filter：Standard Token Filter、LowerCase Token Filter、Stop Token Filter。

ES节点分类：
1、主节点：负责创建索引、删除索引、分配分片、追踪集群中的节点状态等工作。ES中的主节点的工作量比较轻。用户的请求可以发往任何一个节点，并由该节点负责分发请
求、收集结果等操作，而并不需要经过主节点转发。通过在配置文件中设置node.master=true来设置该节点成为候选主节点（但该节点并不一定是主节点，主节点是集群在
候选节点中选举出来的），在ES集群中只有候选节点才有选举权和被选举权。其它节点是不参与选举工作的。