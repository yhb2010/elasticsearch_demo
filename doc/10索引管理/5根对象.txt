映射的最高一层被称为 根对象 ，它可能包含下面几项：
	一个 properties 节点，列出了文档中可能包含的每个字段的映射
	各种元数据字段，它们都以一个下划线开头，例如 _type 、 _id 和 _source
	设置项，控制如何动态处理新的字段，例如 analyzer 、 dynamic_date_formats 和 dynamic_templates
	其他设置，可以同时应用在根对象和其他 object 类型的字段上，例如 enabled 、 dynamic 和 include_in_all

属性：
	type：字段的数据类型，例如 text 或 date
	index：字段是否应当被当成全文来搜索（true），或被当成一个准确的值（false）
	analyzer：确定在索引和搜索时全文字段使用的 analyzer

元数据: _source 字段
存储 _source 字段的确要使用磁盘空间。你可以用下面的映射禁用 _source 字段：
PUT /my_index
{
    "mappings": {
        "my_type": {
            "_source": {
                "enabled":  false
            }
        }
    }
}

元数据: _all 字段
_all字段：一个把其它字段值当作一个大字符串来索引的特殊字段。 query_string 查询子句(搜索 ?q=john )在没有指定字段时默认使用 _all字段。
_all字段在新应用的探索阶段，当你还不清楚文档的最终结构时是比较有用的。你可以使用这个字段来做任何查询，并且有很大可能找到需要的文档：
GET /_search
{
    "match": {
        "_all": "john smith marketing"
    }
}
随着应用的发展，搜索需求变得更加明确，你会发现自己越来越少使用 _all 字段。
如果你不再需要_all字段，你可以通过下面的映射来禁用：
PUT /my_index/_mapping/my_type
{
    "my_type": {
        "_all": { "enabled": false }
    }
}
通过include_in_all设置来逐个控制字段是否要包含在_all字段中，默认值是 true。在一个对象(或根对象)上设置 include_in_all可以修改这个对象中的所有字
段的默认行为。
你可能想要保留_all字段作为一个只包含某些特定字段的全文字段，例如只包含 title，summary和tags。 相对于完全禁用 _all 字段，你可以为所有字段默认禁用
include_in_all选项，仅在你选择的字段上启用：
PUT /my_index/my_type/_mapping
{
    "my_type": {
        "include_in_all": false,
        "properties": {
            "title": {
                "type":           "string",
                "include_in_all": true
            },
            ...
        }
    }
}
你可以配置 _all字段使用的分词器：
PUT /my_index/my_type/_mapping
{
    "my_type": {
        "_all": { "analyzer": "whitespace" }
    }
}

元数据：文档标识
文档标识与四个元数据字段 相关：
	_id
	文档的 ID 字符串
	_type
	文档的类型名
	_index
	文档所在的索引
	_uid
	_type 和 _id 连接在一起构造成 type#id
默认情况下， _uid 字段是被存储（可取回）和索引（可搜索）的。 _type 字段被索引但是没有存储， _id 和 _index 字段则既没有被索引也没有被存储，这意味着
它们并不是真实存在的。
尽管如此，你仍然可以像真实字段一样查询 _id 字段。Elasticsearch 使用 _uid 字段来派生出 _id 。