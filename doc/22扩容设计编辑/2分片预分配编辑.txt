一个分片存在于单个节点， 但一个节点可以持有多个分片。想象一下我们创建拥有两个主分片的索引而不是一个：
	PUT /my_index
	{
	  "settings": {
	    "number_of_shards":   2, 创建拥有两个主分片无副本分片的索引。
	    "number_of_replicas": 0
	  }
	}

这时，我们加入第二个节点，Elasticsearch 会自动将其中一个分片移动至第二个节点。

用户经常在问，为什么 Elasticsearch 不支持 分片分裂（shard-splitting）— 将每个分片分裂为两个或更多部分的能力。 原因就是分片分裂是一
个糟糕的想法：
	分裂一个分片几乎等于重新索引你的数据。它是一个比仅仅将分片从一个节点复制到另一个节点更重量级的操作。
	分裂是指数的。起初你你有一个分片，然后分裂为两个，然后四个，八个，十六个，等等。分裂并不会刚好地把你的处理能力提升 50%。
	分片分裂需要你拥有足够的能力支撑另一份索引的拷贝。通常来说，当你意识到你需要横向扩展时，你已经没有足够的剩余空间来做分裂了。
Elasticsearch通过另一种方式来支持分片分裂。你总是可以把你的数据重新索引至一个拥有适当分片个数的新索引（参阅 重新索引你的数据）。 和移
动分片比起来这依然是一个更加密集的操作，依然需要足够的剩余空间来完成，但至少你可以控制新索引的分片个数了。