percentile_ranks 告诉我们某个具体值属于哪个百分位。119ms 的 percentile_ranks 是在 50 百分位。
假设我们网站必须维持的服务等级协议（SLA）是响应时间低于 210ms。然后，老板警告我们如果响应时间超过 800ms 会把我开除。可以理解的是，我们希望知道有多少
百分比的请求可以满足 SLA 的要求（并期望至少在 800ms 以下！）。
我们可以应用 percentile_ranks 度量而不是 percentiles 度量：
	GET /website/logs/_search
	{
	    "size" : 0,
	    "aggs" : {
	        "zones" : {
	            "terms" : {
	                "field" : "zone"
	            },
	            "aggs" : {
	                "load_times" : {
	                    "percentile_ranks" : {
	                      "field" : "latency",
	                      "values" : [210, 800] 	接受一组我们希望分级的数值。
	                    }
	                }
	            }
	        }
	    }
	}
在聚合运行后，我们能得到两个值：
	"aggregations": {
	  "zones": {
	     "buckets": [
	        {
	           "key": "eu",
	           "doc_count": 6,
	           "load_times": {
	              "values": {
	                 "210.0": 31.944444444444443,
	                 "800.0": 100
	              }
	           }
	        },
	        {
	           "key": "us",
	           "doc_count": 6,
	           "load_times": {
	              "values": {
	                 "210.0": 100,
	                 "800.0": 100
	              }
	           }
	        }
	     ]
	  }
	}
这告诉我们三点重要的信息：
	在欧洲（EU），210ms 的百分位等级是 31.94% 。
	在美国（US），210ms 的百分位等级是 100% 。
	在欧洲（EU）和美国（US），800ms 的百分位等级是 100% 。
通俗的说，在欧洲区域（EU）只有32%的响应时间满足服务等级协议（SLA），而美国区域（US）始终满足服务等级协议的。但幸运的是，两个区域所有响应时间都在
800ms 以下。
percentile_ranks 度量提供了与 percentiles 相同的信息，但它以不同方式呈现，如果我们对某个具体数值更关心，使用它会更方便。

与 cardinality类似，我们可以通过修改参数 compression 来控制内存与准确度之间的比值。
TDigest算法用节点近似计算百分比：节点越多，准确度越高（同时内存消耗也越大），这都与数据量成正比。 compression参数限制节点的最大数目为
20 * compression 。