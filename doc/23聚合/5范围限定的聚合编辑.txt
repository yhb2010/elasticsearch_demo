聚合可以与搜索请求同时执行，但是我们需要理解一个新概念： 范围 。 默认情况下，聚合与查询是对同一范围进行操作的，也就是说，聚合是基于我们
查询匹配的文档集合进行计算的。
利用范围，我们可以问“福特在售车有多少种颜色？”诸如此类的问题。可以简单的在请求中加上一个查询（本例中为 match 查询）：
	GET /cars/transactions/_search
	{
	    "query" : {
	        "match" : {
	            "make" : "ford"
	        }
	    },
	    "aggs" : {
	        "colors" : {
	            "terms" : {
	              "field" : "color"
	            }
	        }
	    }
	}

全局桶编辑：
通常我们希望聚合是在查询范围内的，但有时我们也想要搜索它的子集，而聚合的对象却是 所有 数据。
例如，比方说我们想知道福特汽车与 所有 汽车平均售价的比较。我们可以用普通的聚合（查询范围内的）得到第一个信息，然后用 全局 桶获得第二个信
息。
全局 桶包含 所有 的文档，它无视查询的范围。因为它还是一个桶，我们可以像平常一样将聚合嵌套在内：
	{
	    "size" : 0,
	    "query" : {
	        "match" : {
	            "make" : "ford"
	        }
	    },
	    "aggs" : {
	        "single_avg_price": {
	            "avg" : { "field" : "price" } 聚合操作在查询范围内（例如：所有文档匹配 ford ）
	        },
	        "all": {
	            "global" : {}, global 全局桶没有参数。
	            "aggs" : {
	                "avg_price": {
	                    "avg" : { "field" : "price" } 聚合操作针对所有文档，忽略汽车品牌。
	                }

	            }
	        }
	    }
	}

single_avg_price 度量计算是基于查询范围内所有文档，即所有 福特 汽车。avg_price 度量是嵌套在 全局 桶下的，这意味着它完全忽略了范围并
对所有文档进行计算。聚合返回的平均值是所有汽车的平均售价。